name: Deploy to Amazon EC2

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ap-northeast-2
  S3_BUCKET_NAME: innnas3
  CODE_DEPLOY_APPLICATION_NAME: deploy
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: group

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      # (1) 기본 체크아웃
      - name: Checkout source code
        uses: actions/checkout@v3

      # (2) application.properties 설정
      - name: Create application.properties from secret
        run: |
          mkdir -p ./src/main/resources
          touch ./src/main/resources/application.yml
          echo "${{ secrets.APPLICATION }}" > ./src/main/resources/application.yml          
          cat ./src/main/resources/application.yml

      # (3) gradlew 실행 권한 부여
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      # (4) JDK 21 설정
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      # (5) Gradle build (테스트 제외)
      - name: Build with Gradle (skip tests)
        uses: gradle/gradle-build-action@v2
        with:
          arguments: clean build -x test
      - name: Check built jar
        run: ls -lh build/libs
      # (6) 배포 아카이브 구성
      - name: Prepare deployment package
        run: |
          mkdir -p deploy
          mkdir -p deploy/scripts
          cp build/libs/*.jar deploy/spring-webapp.jar
          cp scripts/*.sh deploy/scripts/
          cp appspec.yml deploy/
          chmod +x deploy/scripts/*.sh

          
      # (7) AWS 인증 설정
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # (8) S3에 배포 파일 업로드
      - name: Upload to S3
        run: |
          aws deploy push \
            --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
            --ignore-hidden-files \
            --s3-location s3://${{ env.S3_BUCKET_NAME }}/${{ github.sha }}.zip \
            --source deploy

      # (9) CodeDeploy로 EC2 배포 실행
      - name: Deploy to EC2 via CodeDeploy
        run: |
          aws deploy create-deployment \
            --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
            --deployment-config-name CodeDeployDefault.AllAtOnce \
            --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
            --s3-location bucket=${{ env.S3_BUCKET_NAME }},key=${{ github.sha }}.zip,bundleType=zip
